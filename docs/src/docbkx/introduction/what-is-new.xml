<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE preface PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
                 "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="what-is-new">
    <title>What is new?</title>

    <para>While a relatively young project, each version of Spring Dynamic Modules (even minor ones) offers new functionality. This chapter is a guide to the new
    and improved feature and intended as a high-level, short summary. Please follow the appropriate links for more in-depth information.</para>

    <section id="dm-2.0.x">
		<title>2.0.x</title>
		
		<section id="dm-2.0.x:blueprint">
			<title>OSGi 4.2 Blueprint Reference Implementation (RI)</title>
			<para>Spring DM served as the basis for the Blueprint Container specification, introduced by OSGi 4.2. Spring DM 2.0 stands as the RI for the 
			aforementioned specification, providing the Blueprint API and implementation out of the box. Various aspect of Spring DM have been adjusted for
			consistency to the Blueprint specification. For more information on the two models,	see <xref linkend="blueprint"/> for more information.</para>
		</section>
		<section id="dm-2.0.x:jdk5">
			<title>Java 5</title>
			<para>As of 2.x, Spring DM requires <ulink url="http://java.sun.com/j2se/1.5.0/">JDK 5</ulink> to run (or compile). The framework code has been
			revised to take advantage of the JDK 5 features such as language improvements, concurrency and generics. Considerable effort has been spent to
			keep the code backwards compatible however, it is recommended to do some sanity tests before upgrading.</para>
		</section>
		<section id="dm-2.0.x:spring-3.x">
			<title>Spring 3.x</title>
			<para>Besides the Java 5 upgrade, DM 2.0 requires Spring 3.x to get access to the latest framework features and JDK optimizations.</para>
		</section>
		<section id="dm-2.0.x:imports">
			<title>Service imports</title>
			<para>2.0.x provides several improvements for service imports (whether single or collection based) both in terms of speed and service lifecycle.
			<xref linkend="service-registry:refs"/> provides more details.</para>
		</section>		
		<section id="dm-2.0.x:security">
			<title>Java 2 Security Integration</title>
			<para>Continuing the work in 1.2.x, Spring DM 2.0 executes all user code using its credentials (the managed bundle permissions). 
			See <xref linkend="appendix-security"/> for more information.</para>
		</section>
		<!-- 
		<section id="dm-2.0.x:artifacts-name">
			<title>Aligned Spring DM artifact names with Spring framework</title>
			<para>As of 2.x, the artifacts names have been align to the conventions of Spring 3.x and OSGi, namely to use the symbolic names as artifact names.
			In practice, this means the <literal>spring-osgi-</literal> is being replaced with <literal>org.springframework.osgi.</literal> so for example,
			<literal>spring-osgi-core</literal> becomes <literal>org.springframework.osgi.core</literal>. </para>
		</section>
 		-->		
	</section>

    <section id="dm-1.2.x">
		<title>1.2.x</title>
		
		<section id="dm-1.2.x:security">
			<title>Java 2 Security Integration</title>
			<para>Since 1.2.x, Spring Dynamic Modules is aware of <ulink url="http://java.sun.com/javase/technologies/security/#overview">secured</ulink> 
			environments by making use of dedicated <ulink url="http://java.sun.com/j2se/1.4.2/docs/guide/security/doprivileged.html">privileged blocks</ulink> 
			for executing security sensitive code. Thus, Spring DM can run as a <emphasis>trusted</emphasis> library without requiring escalated 
			permissions for its managed bundles. See <xref linkend="appendix-security"/> for more information.</para>
		</section>
		<section id="dm-1.2.x:compendium">
			<title>Compendium Services Support</title>
			<para>1.2.x provides integration with the <ulink url="http://www.osgi.org/javadoc/r4v401/org/osgi/service/cm/package-summary.html">Configuration Admin</ulink>, 
			part of the OSGi compendium services. <xref linkend="compendium"/> provides more details on the topic.</para>
		</section>
		<section id="dm-1.2.x:sym-name-change">
			<title>Changed Spring DM Symbolic Names</title>
			<para>Since 1.2.0 M2, the Spring DM bundles symbolic names have been aligned with Spring's 2.5.6+. Thus the prefix 
			<literal>org.springframework.bundle.osgi</literal> has been changed to <literal>org.springframework.osgi</literal>; for example
			Spring DM extender symbolic name was changed from <literal>org.springframework.bundle.osgi.extender</literal> to <literal>org.springframework.osgi.extender</literal> 
			(notice the missing <literal>bundle</literal> word). Additionally, the documentation has been updated to reflect Spring 2.5.6+ symbolic names.</para>
		</section>
        <section id="dm-1.2.x:ebr-usage">
			<title>Usage of SpringSource Enterprise Bundle Repository (EBR)</title>
			<para>To minimize the number of repositories used and the confusion caused by OSGified vs non-OSGified artifacts especially to users using Spring dm Server,
			after 1.2.0 RC1, Spring Dynamic Modules aligned as many of its dependencies as possible with SpringSource <ulink url="http://www.springsource.com/repository">EBR</ulink>.
			In practice this means that Spring framework artifacts, such as <literal>spring-aop.jar</literal> can be now found as <literal>org.springframework.aop.jar</literal>;
			We apologize for any inconvenience created to users relying on these naming conventions.</para>
		</section>
	</section>
    
    <section id="dm-1.1.x">
		<title>1.1.x</title>
		
		<section id="dm-1.1.x:web">
  		    <title>Web Support</title>
			<para>The biggest feature in Spring Dynamic Modules 1.1.x is the transparent support for web applications on OSGi platforms. By integrating
			directly with web containers (such as Apache Tomcat and Jetty), Spring DM allows WARs using Servlet, JSP and taglib technologies to 
			be used with little or no effort at all. 
			Please see <xref linkend="web"/> for details.
			</para>
			<section id="dm-1.1.x:web:spring-mvc">
				<title>Spring-MVC Integration</title>
				<para>Additionally, with 1.1.x it is possible to run Spring-MVC applications inside OSGi environments. See <xref linkend="web:spring-mvc"/>
				for more information.</para>
			</section>
		</section>
		<section id="dm-1.1.x:io">
  		    <title>Classpath Resource Abstraction</title>
			<para>1.1.x adds support for <literal>classpath:</literal> and <literal>classpath*:</literal> prefixes to the OSGi <interfacename>Resource</interfacename>
			abstraction. This allows the discovery of classpath resources (such as Spring's 
			<ulink url="http://static.springframework.org/spring/docs/2.5.x/reference/new-in-2.html#new-in-2-ioc-component-scanning">component scanning</ulink>) to
			work out-of-the-box across multiple bundles on the supported OSGi platforms. See <xref linkend="bnd-app-ctx:osgi-resource"/> for more information.
			</para>
		</section>
		<section id="dm-1.1.x:configuration">
  		    <title>Pluggable Extender Configuration</title>
			<para>1.1.x makes it easy to change the default configuration for the various <link linkend="extender-pattern">extender</link>s used by Spring DM. By using
			<link linkend="appendix-tips:fragments">fragments</link>, users can customize the way application contexts are started, the web container used 
			for web deployment or the thread-pool for running Spring applications. Additionally, it is possible to receive events 
			regarding the OSGi Spring application contexts lifecycle. <xref linkend="bnd-app-ctx:extender"/> lists the available options and explains them in detail.  
			</para>
		</section>
		<section id="dm-1.1.x:improved-class-loading">
  		    <title>Improved Class Loading</title>
			<para>In 1.1.x, the proxy creation has been improved, leading to better package wiring for the managed bundles. See the FAQ for more information.  
			</para>
		</section>
    </section>
    
</chapter>