<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<book xmlns:xi="http://www.w3.org/2001/XInclude">
  <bookinfo>
    <title>Spring Dynamic Modules for <trademark>OSGi</trademark> Service Platforms</title>
    <subtitle>Known Issues</subtitle>
	<releaseinfo>&version;</releaseinfo>

    <authorgroup>
      <author>
        <firstname>Costin</firstname>
        <surname>Leau</surname>
		<affiliation>SpringSource</affiliation>        
      </author>
    </authorgroup>

    <legalnotice>
      <para>Copies of this document may be made for your own use and for
      distribution to others, provided that you do not charge any fee for such
      copies and further provided that each copy contains this Copyright
      Notice, whether distributed in print or electronically.</para>
    </legalnotice>
  </bookinfo>

  <toc />

  <preface id="preface">
	<title>Preface</title>
	<para>
	  This document describes known issues (and possible work-arounds). Each issue mentions the section of the reference
	  documentation that explain the behaviour along with the associated
	  <ulink url="http://jira.springframework.org/browse/OSGI">JIRA</ulink> entry which
	  provides an estimate on when it will be solved.
	  As a rule, the next release Spring Dynamic Modules aims to solve most, if not all of them.
	</para>
  </preface>
  
  <chapter id="known-issues">
    <title>Known Issues</title>

	<para>As a side note, it worth pointing out that the issues below are not really bugs but rather improvements.</para>		

	<section id="OSGI-110">
      <title>CGLIB proxying fails with NPE from time to time</title>
      	<para>During our tests, we have encountered a strange cglib behaviour; when trying to proxy <literal>java.*</literal> classes
      	the process fails with a NullPointerException. Further more, the bug cannot be reproduce constantly, depending a lot on the
      	number of runs and JVM platform used. We believe the cause is a <literal>Weak</literal> reference - see 
      	<ulink url=" http://www.nabble.com/cglib-2.1_3-no-dep-and-NPE-in-AbstractClassGenerator-tf3645088.html#a10179844">this</ulink> discussion. 
      	</para> 
      	<para>See <ulink url="http://jira.springframework.org/browse/OSGI-110">OSGI-110</ulink></para> 
	</section>	

    <section id="OSGI-210">
      <title>Using <literal>classpath</literal> prefix on the root classpath (<literal>/</literal>) fails </title>
      	<para>Calling <methodname>getResource()/getResources()</methodname> from a Bundle, on the root folder (<literal>/</literal>) fails. Currently,
      	only Equinox and Knopflerfish (2.0.3+) support this behaviour.  At the moment of writing this document, Felix provides support for this in the 
      	upcoming 1.1.0.</para>
      	<para>See <ulink url="http://jira.springframework.org/browse/OSGI-210">OSGI-210</ulink></para> 
	</section>

	<section id="OSGI-237">
      <title>Publishing prototypes as OSGi services</title>
      	<para>Due to the way OSGi platform deals with OSGi services (it caches the instance and returns it every time), prototypes are not fully supported.
      	Spring-DM publishes a proxy that on each call, delegates back to the target application context for retrieving the instance. While with other beans
      	this works, in case of prototypes, this results in one-instance-per-invocation which is incorrect. Additional functionality needs to be added
      	to fully support prototypes even though, as pointed out, this involves a knowledge between Client/Server regarding the publication contract.</para>
      	<para>See <ulink url="http://jira.springframework.org/browse/OSGI-237">OSGI-237</ulink></para> 
	</section>	
	
	<section id="OSGI-245">
      <title>Service proxy/object equality</title>
      	<para>Since Spring-DM uses run-time proxies, equality between objects that rely on private field comparison tends to fail. The problem becomes
      	more apparent when dealing with sets that use service rather then service reference equality. Since the proxy does only method interception it
      	does not seem to exist any practical solution at the moment. As a workaround, consider modifying your equality method or relying on the reference
      	equality.</para>
      	<para>See <ulink url="http://jira.springframework.org/browse/OSGI-245">OSGI-245</ulink></para> 
	</section>
	
  </chapter>
</book>
