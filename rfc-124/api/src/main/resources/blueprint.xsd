<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    /*
    * $Revision: 6534 $
    *
    * Copyright (c) OSGi Alliance (2008, 2009). All Rights Reserved.
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */
    -->
<xsd:schema xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            targetNamespace="http://www.osgi.org/xmlns/blueprint/v1.0.0"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified"
            version="1.0.0">

    <!-- Schema elements for core component declarations -->

    <xsd:complexType name="Tidentified" abstract="true">
        <xsd:attribute name="id" type="xsd:ID"/>
    </xsd:complexType>

    <xsd:element name="components" type="Tcomponents"/>

    <xsd:complexType name="Tcomponents">
        <xsd:sequence>
            <xsd:element name="description" type="Tdescription" minOccurs="0"/>
            <xsd:element name="type-converters" type="Ttype-converters" minOccurs="0"/>
            <xsd:choice minOccurs="0" maxOccurs="unbounded">
                <xsd:element name="component" type="Tcomponent"/>
                <xsd:element name="ref-list" type="TreferenceCollection"/>
                <xsd:element name="ref-set" type="TreferenceCollection"/>
                <xsd:element name="reference" type="Treference"/>
                <xsd:element name="service" type="Tservice"/>
                <xsd:any namespace="##other" processContents="strict" minOccurs="0"
                         maxOccurs="unbounded"/>
            </xsd:choice>
        </xsd:sequence>
        <!--<xsd:attributeGroup ref="defaults"/>-->
        <xsd:attribute name="default-lazy-init" default="false" type="xsd:boolean"/>
        <xsd:attribute name="default-init-method" type="xsd:string"/>
        <xsd:attribute name="default-destroy-method" type="xsd:string"/>
        <xsd:attribute name="default-timeout" type="xsd:long" default="300000"/>
        <xsd:attribute name="default-availability" type="Tavailability" default="mandatory"/>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>

    <!--<xsd:element name="description" type="Tdescription"/>-->

    <xsd:complexType name="Tdescription" mixed="true">
        <xsd:choice minOccurs="0" maxOccurs="unbounded"/>
    </xsd:complexType>

    <!--<xsd:element name="type-converters" type="Ttype-converters"/>-->

    <xsd:complexType name="Ttype-converters">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
            <xsd:element name="component" type="Tcomponent"/>
            <xsd:element name="ref" type="Tref"/>
        </xsd:choice>
    </xsd:complexType>

    <xsd:group name="componentElements">
        <xsd:sequence>
            <xsd:element name="description" type="Tdescription" minOccurs="0"/>
            <xsd:choice minOccurs="0" maxOccurs="unbounded">
                <xsd:element name="constructor-arg" type="Tconstructor-arg"/>
                <xsd:element name="property" type="Tproperty"/>
                <xsd:any namespace="##other" processContents="strict" minOccurs="0"
                         maxOccurs="unbounded"/>
            </xsd:choice>
        </xsd:sequence>
    </xsd:group>

    <xsd:complexType name="Tcomponent">
        <xsd:complexContent>
            <xsd:extension base="Tidentified">
                <xsd:group ref="componentElements"/>
                <xsd:attribute name="class" type="xsd:string"/>
                <xsd:attribute name="scope" type="xsd:string"/>
                <xsd:attribute name="lazy-init" default="default" type="Tdefaultable-boolean"/>
                <xsd:attribute name="depends-on" type="xsd:string"/>
                <xsd:attribute name="init-method" type="xsd:string"/>
                <xsd:attribute name="destroy-method" type="xsd:string"/>
                <xsd:attribute name="factory-method" type="xsd:string"/>
                <xsd:attribute name="factory-component" type="xsd:string"/>
                <xsd:anyAttribute namespace="##other" processContents="lax"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:group name="valueElement">
        <xsd:sequence>
            <xsd:choice minOccurs="0" maxOccurs="1">
                <xsd:element name="component" type="Tcomponent"/>
                <xsd:element name="ref" type="Tref"/>
                <xsd:element name="idref" type="Tref"/>
                <xsd:element name="value" type="Tvalue"/>
                <xsd:element name="null" type="Tnull"/>
                <xsd:element name="list" type="TlistSetArray"/>
                <xsd:element name="set" type="TlistSetArray"/>
                <xsd:element name="map" type="Tmap"/>
                <xsd:element name="array" type="TlistSetArray"/>
                <xsd:element name="props" type="Tprops"/>
                <xsd:element name="ref-list" type="TreferenceCollection"/>
                <xsd:element name="ref-set" type="TreferenceCollection"/>
                <xsd:element name="reference" type="Treference"/>
                <xsd:element name="service" type="Tservice"/>
                <xsd:any namespace="##other" processContents="strict"
                         minOccurs="0" maxOccurs="unbounded"/>
            </xsd:choice>
        </xsd:sequence>
    </xsd:group>

    <xsd:group name="keyElement">
        <xsd:sequence>
            <xsd:choice minOccurs="0" maxOccurs="1">
                <xsd:element name="component" type="Tcomponent"/>
                <xsd:element name="ref" type="Tref"/>
                <xsd:element name="idref" type="Tref"/>
                <xsd:element name="value" type="Tvalue"/>
                <xsd:element name="list" type="TlistSetArray"/>
                <xsd:element name="set" type="TlistSetArray"/>
                <xsd:element name="map" type="Tmap"/>
                <xsd:element name="array" type="TlistSetArray"/>
                <xsd:element name="props" type="Tprops"/>
                <xsd:element name="ref-list" type="TreferenceCollection"/>
                <xsd:element name="ref-set" type="TreferenceCollection"/>
                <xsd:element name="reference" type="Treference"/>
                <xsd:element name="service" type="Tservice"/>
                <xsd:any namespace="##other" processContents="strict"
                         minOccurs="0" maxOccurs="unbounded"/>
            </xsd:choice>
        </xsd:sequence>
    </xsd:group>


    <!--<xsd:element name="constructor-arg" type="Tconstructor-arg"/>-->

    <xsd:complexType name="Tconstructor-arg">
        <xsd:sequence>
            <xsd:element name="description" type="Tdescription" minOccurs="0"/>
            <xsd:group ref="valueElement"/>
        </xsd:sequence>
        <xsd:attribute name="index" type="xsd:int"/>
        <xsd:attribute name="type" type="xsd:string"/>
        <xsd:attribute name="ref" type="xsd:string"/>
        <xsd:attribute name="value" type="xsd:string"/>
    </xsd:complexType>

    <xsd:element name="property" type="Tproperty"/>

    <!--<xsd:element name="ref" type="Tref"/>-->

    <xsd:complexType name="Tref">
        <xsd:complexContent>
            <xsd:restriction base="xsd:anyType">
                <xsd:attribute name="component" type="xsd:string" use="required"/>
            </xsd:restriction>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="Tvalue" mixed="true">
        <xsd:choice minOccurs="0" maxOccurs="unbounded"/>
        <xsd:attribute name="type" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="Tnull" mixed="true">
        <xsd:choice minOccurs="0" maxOccurs="unbounded"/>
    </xsd:complexType>

    <xsd:complexType name="Tkey">
        <xsd:group ref="keyElement"/>
    </xsd:complexType>

    <xsd:complexType name="Tprop" mixed="true">
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="optional"/>
    </xsd:complexType>

    <xsd:complexType name="Tproperty">
        <xsd:sequence>
            <xsd:element name="description" type="Tdescription" minOccurs="0"/>
            <xsd:group ref="valueElement"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="ref" type="xsd:string"/>
        <xsd:attribute name="value" type="xsd:string"/>
    </xsd:complexType>

    <!-- Collection Types -->

    <!-- base collection type -->
    <xsd:complexType name="TbaseCollection"/>

    <!-- base type for collections that have (possibly) typed nested values -->
    <xsd:complexType name="TtypedCollection">
        <xsd:complexContent>
            <xsd:extension base="TbaseCollection">
                <xsd:attribute name="value-type" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- 'map' element type -->
    <xsd:complexType name="Tmap">
        <xsd:complexContent>
            <xsd:extension base="TtypedCollection">
                <xsd:sequence>
                    <xsd:element name="entry" type="Tentry" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="key-type" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- 'entry' element type -->
    <xsd:complexType name="Tentry">
        <xsd:sequence>
            <xsd:element name="key" type="Tkey" minOccurs="0"/>
            <xsd:group ref="valueElement"/>
        </xsd:sequence>
        <xsd:attribute name="key" type="xsd:string"/>
        <xsd:attribute name="key-ref" type="xsd:string"/>
        <xsd:attribute name="value" type="xsd:string"/>
        <xsd:attribute name="value-ref" type="xsd:string"/>
    </xsd:complexType>

    <!-- 'list' and 'set' collection type -->
    <xsd:complexType name="TlistSetArray">
        <xsd:complexContent>
            <xsd:extension base="TtypedCollection">
                <xsd:group ref="valueElement" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- 'props' collection type -->
    <xsd:complexType name="Tprops">
        <xsd:complexContent>
            <xsd:extension base="TbaseCollection">
                <xsd:sequence>
                    <xsd:element name="prop" type="Tprop" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- simple internal types -->
    <xsd:simpleType name="Tdefaultable-boolean">
        <xsd:restriction base="xsd:NMTOKEN">
            <xsd:enumeration value="default"/>
            <xsd:enumeration value="true"/>
            <xsd:enumeration value="false"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="Treference">
        <xsd:complexContent>
            <xsd:extension base="Tidentified">
                <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                    <xsd:element name="interfaces" type="TlistSetArray" minOccurs="0" maxOccurs="1"/>
                    <xsd:element name="listener" type="Tlistener" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="interface" use="optional" type="xsd:token"/>
                <xsd:attribute name="filter" use="optional" type="xsd:string"/>
                <xsd:attribute name="component-name" type="xsd:string" use="optional"/>
                <xsd:attribute name="availability" use="optional" type="Tavailability" default="mandatory"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>


    <xsd:complexType name="Tlistener">
        <xsd:choice>
            <xsd:element name="ref" type="Tref"/>
            <xsd:element name="component" type="Tcomponent"/>
            <xsd:element name="reference" type="Treference"/>
            <xsd:element name="service" type="Tservice"/>
            <!-- nested component declaration -->
            <xsd:any namespace="##other" minOccurs="0" maxOccurs="1" processContents="lax"/>
        </xsd:choice>

        <!-- shortcut for component references -->
        <xsd:attribute name="ref" type="xsd:string" use="optional"/>
        <xsd:attribute name="bind-method" type="xsd:token" use="required"/>
        <xsd:attribute name="unbind-method" type="xsd:token" use="required"/>
    </xsd:complexType>

    <!-- single reference -->
    <xsd:complexType name="TsingleReference">
        <xsd:complexContent>
            <xsd:extension base="Treference">
                <xsd:attribute name="timeout" use="optional" type="xsd:long"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:simpleType name="Tavailability">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="mandatory"/>
            <xsd:enumeration value="optional"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="TreferenceCollection">
        <xsd:complexContent>
            <xsd:extension base="Treference">
                <xsd:sequence minOccurs="0" maxOccurs="1">
                    <xsd:element name="comparator" type="Tcomparator"/>
                </xsd:sequence>
                <xsd:attribute name="comparator-ref" type="xsd:string" use="optional"/>
                <xsd:attribute name="member-type" type="Tmember" use="optional"/>
                <xsd:attribute name="ordering-basis" type="TorderingBasis" use="optional"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:simpleType name="Tmember">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="service-instance"/>
            <xsd:enumeration value="service-reference"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="Tcomparator">
        <xsd:choice>
            <xsd:element name="ref" type="Tref"/>
            <xsd:element name="component" type="Tcomponent"/>
            <xsd:element name="reference" type="Treference"/>
            <xsd:element name="service" type="Tservice"/>
            <!-- nested component declaration -->
            <xsd:any namespace="##other" minOccurs="1" maxOccurs="1" processContents="lax"/>
        </xsd:choice>
    </xsd:complexType>

    <xsd:simpleType name="TorderingBasis">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="service"/>
            <xsd:enumeration value="service-reference"/>
        </xsd:restriction>
    </xsd:simpleType>


    <!-- service -->

    <xsd:complexType name="Tservice">
        <xsd:complexContent>
            <xsd:extension base="Tidentified">
                <xsd:choice>
                    <xsd:group ref="serviceElements"/>
                    <!-- nested component declaration -->
                    <xsd:any namespace="##other" minOccurs="0" maxOccurs="1" processContents="lax"/>
                </xsd:choice>
                <xsd:attribute name="interface" type="xsd:token" use="optional"/>
                <xsd:attribute name="ref" type="xsd:string" use="optional"/>
                <xsd:attribute name="depends-on" type="xsd:string" use="optional"/>
                <xsd:attribute name="auto-export" type="TautoExportModes" default="disabled"/>
                <xsd:attribute name="ranking" type="xsd:int" default="0"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:group name="serviceElements">
        <xsd:sequence>
            <xsd:element name="interfaces" type="TlistSetArray" minOccurs="0"/>
            <xsd:element name="service-properties" type="Tmap" minOccurs="0"/>
            <xsd:element name="registration-listener" type="TserviceRegistrationListener"
                         minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="component" type="Tcomponent" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
    </xsd:group>

    <xsd:complexType name="TserviceRegistrationListener">
        <xsd:choice>
            <xsd:element name="ref" type="Tref"/>
            <xsd:element name="component" type="Tcomponent"/>
            <xsd:element name="reference" type="Treference"/>
            <xsd:element name="service" type="Tservice"/>
            <xsd:any namespace="##other" minOccurs="0" maxOccurs="1" processContents="lax"/>
        </xsd:choice>

        <!-- shortcut for component references -->
        <xsd:attribute name="ref" type="xsd:string" use="optional"/>
        <xsd:attribute name="registration-method" type="xsd:token" use="required"/>
        <xsd:attribute name="unregistration-method" type="xsd:token" use="required"/>
    </xsd:complexType>

    <xsd:simpleType name="TautoExportModes">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="disabled"/>
            <xsd:enumeration value="interfaces"/>
            <xsd:enumeration value="class-hierarchy"/>
            <xsd:enumeration value="all-classes"/>
        </xsd:restriction>
    </xsd:simpleType>

</xsd:schema>
