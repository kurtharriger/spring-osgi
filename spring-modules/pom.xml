<?xml version="1.0" encoding="UTF-8"?>
<project>
  <parent>
    <artifactId>spring-osgi</artifactId>
    <groupId>org.springframework.osgi</groupId>
    <version>1.0-m3-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.springframework.osgi</groupId>
  <artifactId>spring-modules</artifactId>
  <packaging>pom</packaging>
  <name>Spring Framework jars packaged as OSGi bundles</name>
  <version>2.1-osgi-m4-SNAPSHOT</version>
  <url>http://www.springframework.org/osgi</url>
  
  <!-- templating properties for unpack task -->
  
  <!-- defaults point to Spring framework -->
  <properties>
  
    <spring.version>2.1-m3</spring.version>
  
    <spring.osgi.export.pkg>org.springframework*</spring.osgi.export.pkg>

    <!-- override Spring/OSGi with Spring defaults -->
    <spring.osgi.export>${spring.osgi.export.pkg}*;version=${spring.version}</spring.osgi.export>
    <spring.osgi.import>${spring.osgi.import.pkg}, org.springframework*;version=${spring.version}, *</spring.osgi.import>
     
   
    <!-- copy the resources inside the bundles | pattern works only for Spring -->
    
    <spring.osgi.include.res>@${pom.artifactId}-${spring.version}.jar!/META-INF/*</spring.osgi.include.res>	     
  </properties>
 

  <modules>
    <module>spring-aop</module>
    <module>spring-required-libraries</module>
  </modules>


  <!-- template dependencies for Spring jars to avoid duplication -->
    <dependencies>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>${pom.artifactId}</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  
 <build>
    <resources>
      <resource>
        <!-- Bug MRESOURCES-35 means we can't use absolute paths -->
        <!-- Bug in eclipse means we have to put META-INF in ${basedir} -->
         
        <targetPath>../../META-INF</targetPath>
        <filtering>true</filtering>
        <includes>
          <include>MANIFEST.MF</include>
        </includes>
        <directory>src/main/resources/META-INF</directory>
      </resource>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        
      </resource>
    </resources>

    <!-- There is a bug in maven which prevents correct inheritance beyond one-layer
     Deep. We therefore have to reconfigure the plugin here -->
    <plugins>
    <plugin>
      <artifactId>maven-clean-plugin</artifactId>
      <configuration>
        <filesets>
          <fileset>
            <directory>META-INF</directory>
            <includes>
              <include>MANIFEST.MF</include>
            </includes>
            <followSymlinks>false</followSymlinks>
          </fileset>
        </filesets>
      </configuration>
    </plugin>

	</plugins>
 </build>


  <reporting>
   <excludeDefaults>true</excludeDefaults>
   <!-- the above doesn't work, so we spell it out in full below -->
   <plugins>
     <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-project-info-reports-plugin</artifactId>
       <inherited>true</inherited>
       <reportSets>
        <reportSet></reportSet>
       </reportSets>
     </plugin>   
   </plugins>
  </reporting>
</project>
